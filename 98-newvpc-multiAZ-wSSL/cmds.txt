# Check CFN health 
# Quick overview check for YAML
for FILE in `ls aws*yaml`; do echo "###################"; echo $FILE; aws cloudformation validate-template --template-body file://"`pwd`/${FILE}" > /dev/null 2>&1 ; if [ $? -ne 0 ]; then echo "NOTE: aws cloudformation validate-template --template-body file://\"`pwd`/${FILE}\""; fi; done

# A verbose check for YAML
for FILE in `ls aws*yaml`; do echo "###################"; echo $FILE; aws cloudformation validate-template --template-body file://"`pwd`/${FILE}"; if [ $? -ne 0 ]; then echo "NOTE: check $FILE"; fi; done



## So.. this one is probably going to seem a bit odd to peeps.  I was trying to figure out how to take the output from completing the CloudFormation Form... taking the "Parameters" output and generating a "params.json" file.  (I do this so that I can mess around with the templates, but not have to manually submit the CloudFormation form - just like everyone else).  Anywho....

REGION="us-east-1"
STACK_NAME="hexGL"
OUTPUT="params-${REGION}.json"

- create params.cfn which will be a cut-and-paste of the "Parameters" section of the CFN creation page.
cat params.cfn | while read ParameterKey ParameterValue; do echo -e "  {\n    \"ParameterKey\": \"${ParameterKey}\",\n    \"ParameterValue\": \"${ParameterValue}\"\n  },"; done > ${OUTPUT}
- once you have the params.json created, add open/close square-brackets at the beginning and end
sed -i'' '1i\
[\
' ${OUTPUT}
echo "]" >> ${OUTPUT}

# Sync up this directory to my S3 bucket
aws s3 sync `pwd` s3://cloudxabide/aws-cloudformation/98-newvpc-multiAZ-wSSL/ --delete --acl public-read

# NOTE:  you may need to run $ touch *   -- and then run the sync, if you need to update the public-read flag
aws cloudformation create-stack --stack-name "${STACK_NAME}" --template-url https://s3.amazonaws.com/cloudxabide/aws-cloudformation/98-newvpc-multiAZ-wSSL/aws-refarch-wordpress-master-newvpc.yaml --parameters https://s3.amazonaws.com/cloudxabide/aws-cloudformation/98-newvpc-multiAZ-wSSL/params-${REGION}.json --region ${REGION} --capabilities CAPABILITY_IAM

